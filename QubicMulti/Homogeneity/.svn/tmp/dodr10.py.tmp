import scipy.io
from Cosmology import cosmology
from Homogeneity import galtools
from scipy import integrate
from scipy import interpolate
from matplotlib import rc
import copy
import glob
import pyfits
rc('text', usetex=False)
rc('font',**{'family':'sans-serif','sans-serif':['Helvetica']})

# define z bins
minz=0.43
maxz=0.7
nbins=5
zedge=linspace(minz,maxz,nbins+1)





# define fiducial cosmology
cosmo=[0.27,0.73,-1,0,0.7]



#dirbase='/Users/hamilton/SDSS/Data/DR10/LRG/'
#dirbase='/Volumes/Data/SDSS/'
dirbase='/Volumes/Data/SDSS/DR10/LRG/'

fdnorth='CMASS-DR10_v6-N-Anderson.fits'
fdsouth='CMASS-DR10_v6-S-Anderson.fits'
frnorth='CMASS-DR10_v6-N-Anderson.ran.fits'
frsouth='CMASS-DR10_v6-S-Anderson.ran.fits'

ratiorandom=5.

#### South
data,hdr_data=pyfits.getdata(dirbase+fdsouth,header=True)
wok=where(data.field('z')>minz)
data=data[wok]
wok=where(data.field('z')<maxz)
data=data[wok]

dataraS=data.field('RA')
datadecS=data.field('DEC')
datazS=data.field('z')
data_wfkpS=data.field('WEIGHT_FKP')
data_wcpS=data.field('WEIGHT_CP')
data_wnozS=data.field('WEIGHT_NOZ')
data_wstarS=data.field('WEIGHT_STAR')
data_wS=data_wfkpS*data_wstarS*(data_wnozS+data_wcpS-1)


rnd,hdr_data=pyfits.getdata(dirbase+frsouth,header=True)
wok=where(rnd.field('z')>minz)
rnd=rnd[wok]
wok=where(rnd.field('z')<maxz)
rnd=rnd[wok]
rnd=rnd[0:size(dataraS)*ratiorandom]

randomraS=rnd.field('RA')
randomdecS=rnd.field('DEC')
randomzS=rnd.field('z')
random_wfkpS=rnd.field('WEIGHT_FKP')
random_wS=random_wfkpS





######### North
data,hdr_data=pyfits.getdata(dirbase+fdnorth,header=True)
wok=where(data.field('z')>minz)
data=data[wok]
wok=where(data.field('z')<maxz)
data=data[wok]

dataraN=data.field('RA')
datadecN=data.field('DEC')
datazN=data.field('z')
data_wfkpN=data.field('WEIGHT_FKP')
data_wcpN=data.field('WEIGHT_CP')
data_wnozN=data.field('WEIGHT_NOZ')
data_wstarN=data.field('WEIGHT_STAR')
data_wN=data_wfkpN*data_wstarN*(data_wnozN+data_wcpN-1)


rnd,hdr_data=pyfits.getdata(dirbase+frnorth,header=True)

wok=where(rnd.field('z')>minz)
rnd=rnd[wok]
wok=where(rnd.field('z')<maxz)
rnd=rnd[wok]
rnd=rnd[0:size(dataraN)*ratiorandom]

randomraN=rnd.field('RA')
randomdecN=rnd.field('DEC')
randomzN=rnd.field('z')
random_wfkpN=rnd.field('WEIGHT_FKP')
random_wN=random_wfkpN




##### Homogeneity
# define r bins
rmin=1.
rmax=200.
nbins=50

r,dd,rr,dr=galtools.paircount_data_random(dataraS,datadecS,datazS,randomraS,randomdecS,randomzS,cosmo,rmin,rmax,nbins,log=1,file='dr10South_pairs.txt',nproc=12)

r,dd,rr,dr=galtools.paircount_data_random(dataraN,datadecN,datazN,randomraN,randomdecN,randomzN,cosmo,rmin,rmax,nbins,log=1,file='dr10North_pairs.txt',nproc=12)


#weighted
r,dd,rr,dr=galtools.paircount_data_random(dataraS,datadecS,datazS,randomraS,randomdecS,randomzS,cosmo,rmin,rmax,nbins,log=1,file='dr10South_pairs_weighted.txt',nproc=2,wdata=data_wS,wrandom=random_wS)

r,dd,rr,dr=galtools.paircount_data_random(dataraN,datadecN,datazN,randomraN,randomdecN,randomzN,cosmo,rmin,rmax,nbins,log=1,file='dr10North_pairs_weighted.txt',nproc=14,wdata=data_wN,wrandom=random_wN)



<<<<<<< .mine

#### z bins
# define r bins
rmin=1.
rmax=200.
nbinsr=50

bins=np.array(zeros(nbins),dtype='|S20')
for i in arange(nbins):
    bins[i]='z_'+str(zedge[i])+'_'+str(zedge[i+1])

# South
for i in arange(np.size(zedge)-1):
    print(' ')
    print(bins[i])
    mini=zedge[i]
    maxi=zedge[i+1]
    wdata=where((datazS >= mini) & (datazS <= maxi))
    wrandom=where((randomzS >= mini) & (randomzS <= maxi))
    r,dd,rr,dr=galtools.paircount_data_random(dataraS[wdata],datadecS[wdata],datazS[wdata],randomraS[wrandom],randomdecS[wrandom],randomzS[wrandom],cosmo,rmin,rmax,nbinsr,log=1,file='dr10South_'+bins[i]+'_pairs_weighted.txt',nproc=8,wdata=data_wS,wrandom=random_wS)



# North
for i in arange(np.size(zedge)-1):
    print(' ')
    print(bins[i])
    mini=zedge[i]
    maxi=zedge[i+1]
    wdata=where((datazN >= mini) & (datazN <= maxi))
    wrandom=where((randomzN >= mini) & (randomzN <= maxi))
    r,dd,rr,dr=galtools.paircount_data_random(dataraN[wdata],datadecN[wdata],datazN[wdata],randomraN[wrandom],randomdecN[wrandom],randomzN[wrandom],cosmo,rmin,rmax,nbinsr,log=1,file='dr10North_'+bins[i]+'_pairs_weighted.txt',nproc=16,wdata=data_wS,wrandom=random_wS)






##### read data
rdn,ddn,rrn,drn,ngn,nrn=galtools.read_pairs('dr10North_pairs_weighted.txt')
rds,dds,rrs,drs,ngs,nrs=galtools.read_pairs('dr10South_pairs_weighted.txt')
rda,dd,rr,dr,ng,nr=galtools.combine_regions('dr10North_pairs_weighted.txt','dr10South_pairs_weighted.txt')
=======
>>>>>>> .r1417


#### Analyse Data and Mocks
datafileNorth='/Users/hamilton/SDSS/Homogeneity/dr10North_pairs_weighted.txt'
datafileSouth='/Users/hamilton/SDSS/Homogeneity/dr10South_pairs_weighted.txt'
mockdirNorth='/Users/hamilton/SDSS/Data/DR10/PTHaloMocks/Pairs_Log/North/'
mockdirSouth='/Users/hamilton/SDSS/Data/DR10/PTHaloMocks/Pairs_Log/South/'

rhs,drhs,valsrhs,chain_s=galtools.getd2_datamocks(datafileSouth,mockdirSouth)
rhn,drhn,valsrhn,chain_n=galtools.getd2_datamocks(datafileNorth,mockdirNorth)
rha,drha,valsrha,chain_a=galtools.getd2_datamocks([datafileNorth,datafileSouth],[mockdirNorth,mockdirSouth],combine=True)



#################### with z bins ###############################
# define z bins
minz=0.43
maxz=0.7
nbins=5
zedge=linspace(minz,maxz,nbins+1)
bins=np.array(zeros(nbins),dtype='|S20')
for i in arange(nbins):
    bins[i]='z_'+str(zedge[i])+'_'+str(zedge[i+1])

datafileNorth=[]
datafileSouth=[]
mockdirNorth=[]
mockdirSouth=[]
for i in bins:
    datafileNorth.append('/Users/hamilton/SDSS/Homogeneity/dr10North_'+np.str(i)+'_pairs_weighted.txt')
    datafileSouth.append('/Users/hamilton/SDSS/Homogeneity/dr10South_'+np.str(i)+'_pairs_weighted.txt')
    mockdirNorth.append('/Users/hamilton/SDSS/Data/DR10/PTHaloMocks/Pairs_Log_Zbins/'+np.str(i)+'/North/')
    mockdirSouth.append('/Users/hamilton/SDSS/Data/DR10/PTHaloMocks/Pairs_Log_Zbins/'+np.str(i)+'/South/')


rhs=np.zeros(nbins)
drhs=np.zeros(nbins)
mockrhs=np.zeros(nbins)
for i in arange(nbins):
    rhs[i],drhs[i],valsrhs,chain_s,mockrhs[i]=galtools.getd2_datamocks(datafileSouth[i],mockdirSouth[i])



rhn=np.zeros(nbins)
drhn=np.zeros(nbins)
mockrhn=np.zeros(nbins)
for i in arange(nbins):
    rhn[i],drhn[i],valsrhn,chain_n,mockrhn[i]=galtools.getd2_datamocks(datafileNorth[i],mockdirNorth[i])


dz=zeros(nbins)+(zedge[1]-zedge[0])/2
zmid=(zedge[arange(nbins)]+zedge[arange(nbins)+1])/2
clf()
xlabel('z')
ylabel('$r_H(r)$ [$h^{-1}.\mathrm{Mpc}$]')
errorbar(zmid,rhs,xerr=dz,yerr=drhs,fmt='ro',label='South')
errorbar(zmid,rhn,xerr=dz,yerr=drhn,fmt='bo',label='North')
legend()

plot(zmid,mockrhs,color='r')
plot(zmid,mockrhn,color='b')


### need to do the MCMC on mocks
nmocks=10
rhn_mocks=np.zeros((nbins,nmocks))
drhn_mocks=np.zeros((nbins,nmocks))


for i in arange(nbins):
    print(bins[i])
    allmocks=glob.glob(mockdirNorth[i]+'pairs_*.txt')
    indices=(rand(nmocks)*np.size(allmocks)).astype('int')
    num=0
    for j in indices:
        print(allmocks[j])
        rhn_mocks[i,num],drhn_mocks[i,num],a,b,c=galtools.getd2_datamocks(allmocks[j],mockdirNorth[i])
        num=num+1


mean_rhn_mocks=zeros(nbins)
sig_rhn_mocks=zeros(nbins)
for i in arange(nbins):
    mean_rhn_mocks[i]=np.mean(rhn_mocks[i,:])
    sig_rhn_mocks[i]=np.std(rhn_mocks[i,:])

dz=zeros(nbins)+(zedge[1]-zedge[0])/2
zmid=(zedge[arange(nbins)]+zedge[arange(nbins)+1])/2
clf()
xlabel('z')
ylabel('$r_H(r)$ [$h^{-1}.\mathrm{Mpc}$]')
errorbar(zmid,rhs,xerr=dz,yerr=drhs,fmt='ro',label='South')
errorbar(zmid,rhn,xerr=dz,yerr=drhn,fmt='bo',label='North')
legend()

errorbar(zmid,mean_rhn_mocks,yerr=sig_rhn_mocks/sqrt(nmocks))










